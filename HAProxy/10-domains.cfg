defaults
    #log global
    timeout connect 10s
    timeout client 3m
    timeout server 1m
    timeout queue 10s
    mode    http
    option  httplog
    option  dontlognull
    option  forwardfor
    option  http-server-close
    stats   enable
    stats   auth stats:NotASecurePassword!
    stats   uri /stats
    # never fail on address resolution
    default-server init-addr last,libc,none

frontend http-in
    mode    http
    bind    *:80
    bind    *:443 ssl crt /etc/ssl/ubercore.local.pem

    cookie SERVERID insert indirect nocache httponly secure
    acl hdr_ipa01 res.hdr(Cookie) -m sub SERVERID= cookieipa01


#    http-request replace-header Referer ^https://ipa\.ubercore\.local(.*)$ https://ipa01\.inside\.mydomain\.com\1 if hdr_ipa01
    acl hdr_set_cookie_dom2 res.hdr(Set-cookie) -m sub Domain= ipa.ubercore.local
    rspirep ^(Set-Cookie:.*)\ Domain=ipa.ubercore.local(.*) \1\ Domain=ipa.ubercore.local\2 if hdr_set_cookie_dom2

#    option http-server-close
#    option forwardfor
#    reqadd X-Forwarded-Proto:\ https
#    reqadd X-Forwarded-Port:\ 443

    # set HTTP Strict Transport Security (HTST) header
#    rspadd  Strict-Transport-Security:\ max-age=15768000

    # Define hosts
    acl ipa                          hdr(host) -i ipa.*

    ## figure out which one to use
    use_backend freeipa if ipa

    default_backend freeipa

backend freeipa
    #mode http
    #balance leastconn
    #option httpclose
    #option forwardfor
    #cookie JSESSIONID prefix
    server ipa.ubercore.local ipa:443 check port 443 inter 2s rise 2 fall 5 cookie cookieipa01 check ssl verify none
